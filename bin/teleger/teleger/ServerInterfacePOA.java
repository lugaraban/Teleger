package teleger;


/**
* teleger/ServerInterfacePOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from teleger.idl
* Sunday, April 3, 2016 7:39:38 PM CEST
*/

public abstract class ServerInterfacePOA extends org.omg.PortableServer.Servant
 implements teleger.ServerInterfaceOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("register", new java.lang.Integer (0));
    _methods.put ("logIn", new java.lang.Integer (1));
    _methods.put ("logOut", new java.lang.Integer (2));
    _methods.put ("searchNewFriends", new java.lang.Integer (3));
    _methods.put ("sendRequestForFriend", new java.lang.Integer (4));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // teleger/ServerInterface/register
       {
         teleger.User userData = teleger.UserHelper.read (in);
         boolean $result = false;
         $result = this.register (userData);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 1:  // teleger/ServerInterface/logIn
       {
         String userId = in.read_string ();
         String userPassword = in.read_string ();
         String ip = in.read_string ();
         teleger.ClientInterface client = teleger.ClientInterfaceHelper.read (in);
         teleger.SafeUser $result[] = null;
         $result = this.logIn (userId, userPassword, ip, client);
         out = $rh.createReply();
         teleger.userFriendsHelper.write (out, $result);
         break;
       }

       case 2:  // teleger/ServerInterface/logOut
       {
         String userId = in.read_string ();
         String userPassword = in.read_string ();
         boolean $result = false;
         $result = this.logOut (userId, userPassword);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 3:  // teleger/ServerInterface/searchNewFriends
       {
         String name = in.read_string ();
         teleger.SafeUser $result[] = null;
         $result = this.searchNewFriends (name);
         out = $rh.createReply();
         teleger.userFriendsHelper.write (out, $result);
         break;
       }

       case 4:  // teleger/ServerInterface/sendRequestForFriend
       {
         teleger.SafeUser user = teleger.SafeUserHelper.read (in);
         teleger.SafeUser friend = teleger.SafeUserHelper.read (in);
         this.sendRequestForFriend (user, friend);
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:teleger/ServerInterface:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public ServerInterface _this() 
  {
    return ServerInterfaceHelper.narrow(
    super._this_object());
  }

  public ServerInterface _this(org.omg.CORBA.ORB orb) 
  {
    return ServerInterfaceHelper.narrow(
    super._this_object(orb));
  }


} // class ServerInterfacePOA
