// This file is generated by omniidl (C++ backend)- omniORB_4_2. Do not edit.

#include "teleger.hh"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_2;



void
teleger::User::operator>>= (cdrStream &_n) const
{
  _n.marshalString(id,0);
  _n.marshalString(password,0);
  _n.marshalString(name,0);
  _n.marshalString(image,0);

}

void
teleger::User::operator<<= (cdrStream &_n)
{
  id = _n.unmarshalString(0);
  password = _n.unmarshalString(0);
  name = _n.unmarshalString(0);
  image = _n.unmarshalString(0);

}

void
teleger::SafeUser::operator>>= (cdrStream &_n) const
{
  _n.marshalString(id,0);
  _n.marshalString(name,0);
  _n.marshalString(image,0);
  ClientInterface_Helper::marshalObjRef(reference,_n);

}

void
teleger::SafeUser::operator<<= (cdrStream &_n)
{
  id = _n.unmarshalString(0);
  name = _n.unmarshalString(0);
  image = _n.unmarshalString(0);
  reference = ClientInterface_Helper::unmarshalObjRef(_n);

}

teleger::ClientInterface_ptr teleger::ClientInterface_Helper::_nil() {
  return ::teleger::ClientInterface::_nil();
}

::CORBA::Boolean teleger::ClientInterface_Helper::is_nil(::teleger::ClientInterface_ptr p) {
  return ::CORBA::is_nil(p);

}

void teleger::ClientInterface_Helper::release(::teleger::ClientInterface_ptr p) {
  ::CORBA::release(p);
}

void teleger::ClientInterface_Helper::marshalObjRef(::teleger::ClientInterface_ptr obj, cdrStream& s) {
  ::teleger::ClientInterface::_marshalObjRef(obj, s);
}

teleger::ClientInterface_ptr teleger::ClientInterface_Helper::unmarshalObjRef(cdrStream& s) {
  return ::teleger::ClientInterface::_unmarshalObjRef(s);
}

void teleger::ClientInterface_Helper::duplicate(::teleger::ClientInterface_ptr obj) {
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
}

teleger::ClientInterface_ptr
teleger::ClientInterface::_duplicate(::teleger::ClientInterface_ptr obj)
{
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
  return obj;
}

teleger::ClientInterface_ptr
teleger::ClientInterface::_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


teleger::ClientInterface_ptr
teleger::ClientInterface::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

teleger::ClientInterface_ptr
teleger::ClientInterface::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_ClientInterface _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_ClientInterface* _the_nil_ptr = 0;
  if (!_the_nil_ptr) {
    omni::nilRefLock().lock();
    if (!_the_nil_ptr) {
      _the_nil_ptr = new _objref_ClientInterface;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* teleger::ClientInterface::_PD_repoId = "IDL:teleger/ClientInterface:1.0";


teleger::_objref_ClientInterface::~_objref_ClientInterface() {
  
}


teleger::_objref_ClientInterface::_objref_ClientInterface(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::teleger::ClientInterface::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
teleger::_objref_ClientInterface::_ptrToObjRef(const char* id)
{
  if (id == ::teleger::ClientInterface::_PD_repoId)
    return (::teleger::ClientInterface_ptr) this;
  
  if (id == ::CORBA::Object::_PD_repoId)
    return (::CORBA::Object_ptr) this;

  if (omni::strMatch(id, ::teleger::ClientInterface::_PD_repoId))
    return (::teleger::ClientInterface_ptr) this;
  
  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (::CORBA::Object_ptr) this;

  return 0;
}


//
// Code for teleger::ClientInterface::notifyConnection

// Proxy call descriptor class. Mangled signature:
//  void_i_cteleger_mSafeUser
class _0RL_cd_3a4e01c462c0e4fe_00000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_3a4e01c462c0e4fe_00000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  static const char* const _user_exns[];

  teleger::SafeUser_var arg_0_;
  const teleger::SafeUser* arg_0;
};

void _0RL_cd_3a4e01c462c0e4fe_00000000::marshalArguments(cdrStream& _n)
{
  (const teleger::SafeUser&) *arg_0 >>= _n;

}

void _0RL_cd_3a4e01c462c0e4fe_00000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = new teleger::SafeUser;
  (teleger::SafeUser&)arg_0_ <<= _n;
  arg_0 = &arg_0_.in();

}

const char* const _0RL_cd_3a4e01c462c0e4fe_00000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_3a4e01c462c0e4fe_10000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3a4e01c462c0e4fe_00000000* tcd = (_0RL_cd_3a4e01c462c0e4fe_00000000*)cd;
  teleger::_impl_ClientInterface* impl = (teleger::_impl_ClientInterface*) svnt->_ptrToInterface(teleger::ClientInterface::_PD_repoId);
  impl->notifyConnection(*tcd->arg_0);


}

void teleger::_objref_ClientInterface::notifyConnection(const ::teleger::SafeUser& connectedUser)
{
  _0RL_cd_3a4e01c462c0e4fe_00000000 _call_desc(_0RL_lcfn_3a4e01c462c0e4fe_10000000, "notifyConnection", 17);
  _call_desc.arg_0 = &(::teleger::SafeUser&) connectedUser;

  _invoke(_call_desc);



}


//
// Code for teleger::ClientInterface::receiveFriendRequest

// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_cteleger_mSafeUser
class _0RL_cd_3a4e01c462c0e4fe_20000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_3a4e01c462c0e4fe_20000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  teleger::SafeUser_var arg_0_;
  const teleger::SafeUser* arg_0;
  ::CORBA::Boolean result;
};

void _0RL_cd_3a4e01c462c0e4fe_20000000::marshalArguments(cdrStream& _n)
{
  (const teleger::SafeUser&) *arg_0 >>= _n;

}

void _0RL_cd_3a4e01c462c0e4fe_20000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = new teleger::SafeUser;
  (teleger::SafeUser&)arg_0_ <<= _n;
  arg_0 = &arg_0_.in();

}

void _0RL_cd_3a4e01c462c0e4fe_20000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_3a4e01c462c0e4fe_20000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

const char* const _0RL_cd_3a4e01c462c0e4fe_20000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_3a4e01c462c0e4fe_30000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3a4e01c462c0e4fe_20000000* tcd = (_0RL_cd_3a4e01c462c0e4fe_20000000*)cd;
  teleger::_impl_ClientInterface* impl = (teleger::_impl_ClientInterface*) svnt->_ptrToInterface(teleger::ClientInterface::_PD_repoId);
  tcd->result = impl->receiveFriendRequest(*tcd->arg_0);


}

::CORBA::Boolean teleger::_objref_ClientInterface::receiveFriendRequest(const ::teleger::SafeUser& user)
{
  _0RL_cd_3a4e01c462c0e4fe_20000000 _call_desc(_0RL_lcfn_3a4e01c462c0e4fe_30000000, "receiveFriendRequest", 21);
  _call_desc.arg_0 = &(::teleger::SafeUser&) user;

  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for teleger::ClientInterface::sendMessage

// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_cstring_i_cstring
class _0RL_cd_3a4e01c462c0e4fe_40000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_3a4e01c462c0e4fe_40000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::String_var arg_0_;
  const char* arg_0;
  ::CORBA::String_var arg_1_;
  const char* arg_1;
  ::CORBA::Boolean result;
};

void _0RL_cd_3a4e01c462c0e4fe_40000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);
  _n.marshalString(arg_1,0);

}

void _0RL_cd_3a4e01c462c0e4fe_40000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();
  arg_1_ = _n.unmarshalString(0);
  arg_1 = arg_1_.in();

}

void _0RL_cd_3a4e01c462c0e4fe_40000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_3a4e01c462c0e4fe_40000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

const char* const _0RL_cd_3a4e01c462c0e4fe_40000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_3a4e01c462c0e4fe_50000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3a4e01c462c0e4fe_40000000* tcd = (_0RL_cd_3a4e01c462c0e4fe_40000000*)cd;
  teleger::_impl_ClientInterface* impl = (teleger::_impl_ClientInterface*) svnt->_ptrToInterface(teleger::ClientInterface::_PD_repoId);
  tcd->result = impl->sendMessage(tcd->arg_0, tcd->arg_1);


}

::CORBA::Boolean teleger::_objref_ClientInterface::sendMessage(const char* message, const char* type)
{
  _0RL_cd_3a4e01c462c0e4fe_40000000 _call_desc(_0RL_lcfn_3a4e01c462c0e4fe_50000000, "sendMessage", 12);
  _call_desc.arg_0 = message;
  _call_desc.arg_1 = type;

  _invoke(_call_desc);
  return _call_desc.result;


}

teleger::_pof_ClientInterface::~_pof_ClientInterface() {}


omniObjRef*
teleger::_pof_ClientInterface::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::teleger::_objref_ClientInterface(ior, id);
}


::CORBA::Boolean
teleger::_pof_ClientInterface::is_a(const char* id) const
{
  if (omni::ptrStrMatch(id, ::teleger::ClientInterface::_PD_repoId))
    return 1;
  
  return 0;
}

const teleger::_pof_ClientInterface _the_pof_teleger_mClientInterface;

teleger::_impl_ClientInterface::~_impl_ClientInterface() {}


::CORBA::Boolean
teleger::_impl_ClientInterface::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if (omni::strMatch(op, "notifyConnection")) {

    _0RL_cd_3a4e01c462c0e4fe_00000000 _call_desc(_0RL_lcfn_3a4e01c462c0e4fe_10000000, "notifyConnection", 17, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "receiveFriendRequest")) {

    _0RL_cd_3a4e01c462c0e4fe_20000000 _call_desc(_0RL_lcfn_3a4e01c462c0e4fe_30000000, "receiveFriendRequest", 21, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "sendMessage")) {

    _0RL_cd_3a4e01c462c0e4fe_40000000 _call_desc(_0RL_lcfn_3a4e01c462c0e4fe_50000000, "sendMessage", 12, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
teleger::_impl_ClientInterface::_ptrToInterface(const char* id)
{
  if (id == ::teleger::ClientInterface::_PD_repoId)
    return (::teleger::_impl_ClientInterface*) this;
  
  if (id == ::CORBA::Object::_PD_repoId)
    return (void*) 1;

  if (omni::strMatch(id, ::teleger::ClientInterface::_PD_repoId))
    return (::teleger::_impl_ClientInterface*) this;
  
  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (void*) 1;
  return 0;
}

const char*
teleger::_impl_ClientInterface::_mostDerivedRepoId()
{
  return ::teleger::ClientInterface::_PD_repoId;
}

teleger::ServerInterface_ptr teleger::ServerInterface_Helper::_nil() {
  return ::teleger::ServerInterface::_nil();
}

::CORBA::Boolean teleger::ServerInterface_Helper::is_nil(::teleger::ServerInterface_ptr p) {
  return ::CORBA::is_nil(p);

}

void teleger::ServerInterface_Helper::release(::teleger::ServerInterface_ptr p) {
  ::CORBA::release(p);
}

void teleger::ServerInterface_Helper::marshalObjRef(::teleger::ServerInterface_ptr obj, cdrStream& s) {
  ::teleger::ServerInterface::_marshalObjRef(obj, s);
}

teleger::ServerInterface_ptr teleger::ServerInterface_Helper::unmarshalObjRef(cdrStream& s) {
  return ::teleger::ServerInterface::_unmarshalObjRef(s);
}

void teleger::ServerInterface_Helper::duplicate(::teleger::ServerInterface_ptr obj) {
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
}

teleger::ServerInterface_ptr
teleger::ServerInterface::_duplicate(::teleger::ServerInterface_ptr obj)
{
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
  return obj;
}

teleger::ServerInterface_ptr
teleger::ServerInterface::_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


teleger::ServerInterface_ptr
teleger::ServerInterface::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

teleger::ServerInterface_ptr
teleger::ServerInterface::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_ServerInterface _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_ServerInterface* _the_nil_ptr = 0;
  if (!_the_nil_ptr) {
    omni::nilRefLock().lock();
    if (!_the_nil_ptr) {
      _the_nil_ptr = new _objref_ServerInterface;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* teleger::ServerInterface::_PD_repoId = "IDL:teleger/ServerInterface:1.0";


teleger::_objref_ServerInterface::~_objref_ServerInterface() {
  
}


teleger::_objref_ServerInterface::_objref_ServerInterface(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::teleger::ServerInterface::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
teleger::_objref_ServerInterface::_ptrToObjRef(const char* id)
{
  if (id == ::teleger::ServerInterface::_PD_repoId)
    return (::teleger::ServerInterface_ptr) this;
  
  if (id == ::CORBA::Object::_PD_repoId)
    return (::CORBA::Object_ptr) this;

  if (omni::strMatch(id, ::teleger::ServerInterface::_PD_repoId))
    return (::teleger::ServerInterface_ptr) this;
  
  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (::CORBA::Object_ptr) this;

  return 0;
}


//
// Code for teleger::ServerInterface::register

// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_cteleger_mUser
class _0RL_cd_3a4e01c462c0e4fe_60000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_3a4e01c462c0e4fe_60000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  teleger::User_var arg_0_;
  const teleger::User* arg_0;
  ::CORBA::Boolean result;
};

void _0RL_cd_3a4e01c462c0e4fe_60000000::marshalArguments(cdrStream& _n)
{
  (const teleger::User&) *arg_0 >>= _n;

}

void _0RL_cd_3a4e01c462c0e4fe_60000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = new teleger::User;
  (teleger::User&)arg_0_ <<= _n;
  arg_0 = &arg_0_.in();

}

void _0RL_cd_3a4e01c462c0e4fe_60000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_3a4e01c462c0e4fe_60000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

const char* const _0RL_cd_3a4e01c462c0e4fe_60000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_3a4e01c462c0e4fe_70000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3a4e01c462c0e4fe_60000000* tcd = (_0RL_cd_3a4e01c462c0e4fe_60000000*)cd;
  teleger::_impl_ServerInterface* impl = (teleger::_impl_ServerInterface*) svnt->_ptrToInterface(teleger::ServerInterface::_PD_repoId);
  tcd->result = impl->_cxx_register(*tcd->arg_0);


}

::CORBA::Boolean teleger::_objref_ServerInterface::_cxx_register(const ::teleger::User& userData)
{
  _0RL_cd_3a4e01c462c0e4fe_60000000 _call_desc(_0RL_lcfn_3a4e01c462c0e4fe_70000000, "register", 9);
  _call_desc.arg_0 = &(::teleger::User&) userData;

  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for teleger::ServerInterface::logIn

// Proxy call descriptor class. Mangled signature:
//  _cteleger_muserFriends_i_cstring_i_cstring_i_cstring_i_cteleger_mClientInterface
class _0RL_cd_3a4e01c462c0e4fe_80000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_3a4e01c462c0e4fe_80000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::String_var arg_0_;
  const char* arg_0;
  ::CORBA::String_var arg_1_;
  const char* arg_1;
  ::CORBA::String_var arg_2_;
  const char* arg_2;
  teleger::ClientInterface_var arg_3_;
  teleger::ClientInterface_ptr arg_3;
  teleger::userFriends_var result;
};

void _0RL_cd_3a4e01c462c0e4fe_80000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);
  _n.marshalString(arg_1,0);
  _n.marshalString(arg_2,0);
  teleger::ClientInterface_Helper::marshalObjRef(arg_3,_n);

}

void _0RL_cd_3a4e01c462c0e4fe_80000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();
  arg_1_ = _n.unmarshalString(0);
  arg_1 = arg_1_.in();
  arg_2_ = _n.unmarshalString(0);
  arg_2 = arg_2_.in();
  arg_3_ = teleger::ClientInterface_Helper::unmarshalObjRef(_n);
  arg_3 = arg_3_.in();

}

void _0RL_cd_3a4e01c462c0e4fe_80000000::marshalReturnedValues(cdrStream& _n)
{
  (const teleger::userFriends&) result >>= _n;

}

void _0RL_cd_3a4e01c462c0e4fe_80000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new teleger::userFriends;
  (teleger::userFriends&)result <<= _n;

}

const char* const _0RL_cd_3a4e01c462c0e4fe_80000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_3a4e01c462c0e4fe_90000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3a4e01c462c0e4fe_80000000* tcd = (_0RL_cd_3a4e01c462c0e4fe_80000000*)cd;
  teleger::_impl_ServerInterface* impl = (teleger::_impl_ServerInterface*) svnt->_ptrToInterface(teleger::ServerInterface::_PD_repoId);
  tcd->result = impl->logIn(tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3);


}

teleger::userFriends* teleger::_objref_ServerInterface::logIn(const char* userId, const char* userPassword, const char* ip, ::teleger::ClientInterface_ptr client)
{
  _0RL_cd_3a4e01c462c0e4fe_80000000 _call_desc(_0RL_lcfn_3a4e01c462c0e4fe_90000000, "logIn", 6);
  _call_desc.arg_0 = userId;
  _call_desc.arg_1 = userPassword;
  _call_desc.arg_2 = ip;
  _call_desc.arg_3 = client;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}


//
// Code for teleger::ServerInterface::logOut

// Local call call-back function.
static void
_0RL_lcfn_3a4e01c462c0e4fe_a0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3a4e01c462c0e4fe_40000000* tcd = (_0RL_cd_3a4e01c462c0e4fe_40000000*)cd;
  teleger::_impl_ServerInterface* impl = (teleger::_impl_ServerInterface*) svnt->_ptrToInterface(teleger::ServerInterface::_PD_repoId);
  tcd->result = impl->logOut(tcd->arg_0, tcd->arg_1);


}

::CORBA::Boolean teleger::_objref_ServerInterface::logOut(const char* userId, const char* userPassword)
{
  _0RL_cd_3a4e01c462c0e4fe_40000000 _call_desc(_0RL_lcfn_3a4e01c462c0e4fe_a0000000, "logOut", 7);
  _call_desc.arg_0 = userId;
  _call_desc.arg_1 = userPassword;

  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for teleger::ServerInterface::searchNewFriends

// Proxy call descriptor class. Mangled signature:
//  _cteleger_muserFriends_i_cstring
class _0RL_cd_3a4e01c462c0e4fe_b0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_3a4e01c462c0e4fe_b0000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::String_var arg_0_;
  const char* arg_0;
  teleger::userFriends_var result;
};

void _0RL_cd_3a4e01c462c0e4fe_b0000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);

}

void _0RL_cd_3a4e01c462c0e4fe_b0000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();

}

void _0RL_cd_3a4e01c462c0e4fe_b0000000::marshalReturnedValues(cdrStream& _n)
{
  (const teleger::userFriends&) result >>= _n;

}

void _0RL_cd_3a4e01c462c0e4fe_b0000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new teleger::userFriends;
  (teleger::userFriends&)result <<= _n;

}

const char* const _0RL_cd_3a4e01c462c0e4fe_b0000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_3a4e01c462c0e4fe_c0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3a4e01c462c0e4fe_b0000000* tcd = (_0RL_cd_3a4e01c462c0e4fe_b0000000*)cd;
  teleger::_impl_ServerInterface* impl = (teleger::_impl_ServerInterface*) svnt->_ptrToInterface(teleger::ServerInterface::_PD_repoId);
  tcd->result = impl->searchNewFriends(tcd->arg_0);


}

teleger::userFriends* teleger::_objref_ServerInterface::searchNewFriends(const char* name)
{
  _0RL_cd_3a4e01c462c0e4fe_b0000000 _call_desc(_0RL_lcfn_3a4e01c462c0e4fe_c0000000, "searchNewFriends", 17);
  _call_desc.arg_0 = name;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}


//
// Code for teleger::ServerInterface::sendRequestForFriend

// Proxy call descriptor class. Mangled signature:
//  void_i_cteleger_mSafeUser_i_cstring
class _0RL_cd_3a4e01c462c0e4fe_d0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_3a4e01c462c0e4fe_d0000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  static const char* const _user_exns[];

  teleger::SafeUser_var arg_0_;
  const teleger::SafeUser* arg_0;
  ::CORBA::String_var arg_1_;
  const char* arg_1;
};

void _0RL_cd_3a4e01c462c0e4fe_d0000000::marshalArguments(cdrStream& _n)
{
  (const teleger::SafeUser&) *arg_0 >>= _n;
  _n.marshalString(arg_1,0);

}

void _0RL_cd_3a4e01c462c0e4fe_d0000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = new teleger::SafeUser;
  (teleger::SafeUser&)arg_0_ <<= _n;
  arg_0 = &arg_0_.in();
  arg_1_ = _n.unmarshalString(0);
  arg_1 = arg_1_.in();

}

const char* const _0RL_cd_3a4e01c462c0e4fe_d0000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_3a4e01c462c0e4fe_e0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3a4e01c462c0e4fe_d0000000* tcd = (_0RL_cd_3a4e01c462c0e4fe_d0000000*)cd;
  teleger::_impl_ServerInterface* impl = (teleger::_impl_ServerInterface*) svnt->_ptrToInterface(teleger::ServerInterface::_PD_repoId);
  impl->sendRequestForFriend(*tcd->arg_0, tcd->arg_1);


}

void teleger::_objref_ServerInterface::sendRequestForFriend(const ::teleger::SafeUser& user, const char* _cxx_friend)
{
  _0RL_cd_3a4e01c462c0e4fe_d0000000 _call_desc(_0RL_lcfn_3a4e01c462c0e4fe_e0000000, "sendRequestForFriend", 21);
  _call_desc.arg_0 = &(::teleger::SafeUser&) user;
  _call_desc.arg_1 = _cxx_friend;

  _invoke(_call_desc);



}


//
// Code for teleger::ServerInterface::notifyAnswerRequest

// Proxy call descriptor class. Mangled signature:
//  void_i_cstring_i_cstring_i_cstring_i_cboolean
class _0RL_cd_3a4e01c462c0e4fe_f0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_3a4e01c462c0e4fe_f0000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  static const char* const _user_exns[];

  ::CORBA::String_var arg_0_;
  const char* arg_0;
  ::CORBA::String_var arg_1_;
  const char* arg_1;
  ::CORBA::String_var arg_2_;
  const char* arg_2;
  ::CORBA::Boolean arg_3;
};

void _0RL_cd_3a4e01c462c0e4fe_f0000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);
  _n.marshalString(arg_1,0);
  _n.marshalString(arg_2,0);
  _n.marshalBoolean(arg_3);

}

void _0RL_cd_3a4e01c462c0e4fe_f0000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();
  arg_1_ = _n.unmarshalString(0);
  arg_1 = arg_1_.in();
  arg_2_ = _n.unmarshalString(0);
  arg_2 = arg_2_.in();
  arg_3 = _n.unmarshalBoolean();

}

const char* const _0RL_cd_3a4e01c462c0e4fe_f0000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_3a4e01c462c0e4fe_01000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3a4e01c462c0e4fe_f0000000* tcd = (_0RL_cd_3a4e01c462c0e4fe_f0000000*)cd;
  teleger::_impl_ServerInterface* impl = (teleger::_impl_ServerInterface*) svnt->_ptrToInterface(teleger::ServerInterface::_PD_repoId);
  impl->notifyAnswerRequest(tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3);


}

void teleger::_objref_ServerInterface::notifyAnswerRequest(const char* connectedUser, const char* pass, const char* _cxx_friend, ::CORBA::Boolean acceptance)
{
  _0RL_cd_3a4e01c462c0e4fe_f0000000 _call_desc(_0RL_lcfn_3a4e01c462c0e4fe_01000000, "notifyAnswerRequest", 20);
  _call_desc.arg_0 = connectedUser;
  _call_desc.arg_1 = pass;
  _call_desc.arg_2 = _cxx_friend;
  _call_desc.arg_3 = acceptance;

  _invoke(_call_desc);



}


//
// Code for teleger::ServerInterface::changePassword

// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_cstring_i_cstring_i_cstring
class _0RL_cd_3a4e01c462c0e4fe_11000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_3a4e01c462c0e4fe_11000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::String_var arg_0_;
  const char* arg_0;
  ::CORBA::String_var arg_1_;
  const char* arg_1;
  ::CORBA::String_var arg_2_;
  const char* arg_2;
  ::CORBA::Boolean result;
};

void _0RL_cd_3a4e01c462c0e4fe_11000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);
  _n.marshalString(arg_1,0);
  _n.marshalString(arg_2,0);

}

void _0RL_cd_3a4e01c462c0e4fe_11000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();
  arg_1_ = _n.unmarshalString(0);
  arg_1 = arg_1_.in();
  arg_2_ = _n.unmarshalString(0);
  arg_2 = arg_2_.in();

}

void _0RL_cd_3a4e01c462c0e4fe_11000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_3a4e01c462c0e4fe_11000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

const char* const _0RL_cd_3a4e01c462c0e4fe_11000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_3a4e01c462c0e4fe_21000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3a4e01c462c0e4fe_11000000* tcd = (_0RL_cd_3a4e01c462c0e4fe_11000000*)cd;
  teleger::_impl_ServerInterface* impl = (teleger::_impl_ServerInterface*) svnt->_ptrToInterface(teleger::ServerInterface::_PD_repoId);
  tcd->result = impl->changePassword(tcd->arg_0, tcd->arg_1, tcd->arg_2);


}

::CORBA::Boolean teleger::_objref_ServerInterface::changePassword(const char* old, const char* _cxx_new, const char* user)
{
  _0RL_cd_3a4e01c462c0e4fe_11000000 _call_desc(_0RL_lcfn_3a4e01c462c0e4fe_21000000, "changePassword", 15);
  _call_desc.arg_0 = old;
  _call_desc.arg_1 = _cxx_new;
  _call_desc.arg_2 = user;

  _invoke(_call_desc);
  return _call_desc.result;


}

teleger::_pof_ServerInterface::~_pof_ServerInterface() {}


omniObjRef*
teleger::_pof_ServerInterface::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::teleger::_objref_ServerInterface(ior, id);
}


::CORBA::Boolean
teleger::_pof_ServerInterface::is_a(const char* id) const
{
  if (omni::ptrStrMatch(id, ::teleger::ServerInterface::_PD_repoId))
    return 1;
  
  return 0;
}

const teleger::_pof_ServerInterface _the_pof_teleger_mServerInterface;

teleger::_impl_ServerInterface::~_impl_ServerInterface() {}


::CORBA::Boolean
teleger::_impl_ServerInterface::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if (omni::strMatch(op, "register")) {

    _0RL_cd_3a4e01c462c0e4fe_60000000 _call_desc(_0RL_lcfn_3a4e01c462c0e4fe_70000000, "register", 9, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "logIn")) {

    _0RL_cd_3a4e01c462c0e4fe_80000000 _call_desc(_0RL_lcfn_3a4e01c462c0e4fe_90000000, "logIn", 6, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "logOut")) {

    _0RL_cd_3a4e01c462c0e4fe_40000000 _call_desc(_0RL_lcfn_3a4e01c462c0e4fe_a0000000, "logOut", 7, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "searchNewFriends")) {

    _0RL_cd_3a4e01c462c0e4fe_b0000000 _call_desc(_0RL_lcfn_3a4e01c462c0e4fe_c0000000, "searchNewFriends", 17, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "sendRequestForFriend")) {

    _0RL_cd_3a4e01c462c0e4fe_d0000000 _call_desc(_0RL_lcfn_3a4e01c462c0e4fe_e0000000, "sendRequestForFriend", 21, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "notifyAnswerRequest")) {

    _0RL_cd_3a4e01c462c0e4fe_f0000000 _call_desc(_0RL_lcfn_3a4e01c462c0e4fe_01000000, "notifyAnswerRequest", 20, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "changePassword")) {

    _0RL_cd_3a4e01c462c0e4fe_11000000 _call_desc(_0RL_lcfn_3a4e01c462c0e4fe_21000000, "changePassword", 15, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
teleger::_impl_ServerInterface::_ptrToInterface(const char* id)
{
  if (id == ::teleger::ServerInterface::_PD_repoId)
    return (::teleger::_impl_ServerInterface*) this;
  
  if (id == ::CORBA::Object::_PD_repoId)
    return (void*) 1;

  if (omni::strMatch(id, ::teleger::ServerInterface::_PD_repoId))
    return (::teleger::_impl_ServerInterface*) this;
  
  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (void*) 1;
  return 0;
}

const char*
teleger::_impl_ServerInterface::_mostDerivedRepoId()
{
  return ::teleger::ServerInterface::_PD_repoId;
}

POA_teleger::ClientInterface::~ClientInterface() {}

POA_teleger::ServerInterface::~ServerInterface() {}

